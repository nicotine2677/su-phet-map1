// ‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢
const southWest = L.latLng(13.1020, 99.9440);
const northEast = L.latLng(13.1100, 99.9505);
const universityBounds = L.latLngBounds(southWest, northEast);

// ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
const map = L.map("map", {
  maxBounds: universityBounds,
  maxBoundsViscosity: 1.0,
  minZoom: 16,
  maxZoom: 18,
}).setView([13.1056, 99.9474], 16);

// ‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á
L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
  attribution: "¬© OpenStreetMap contributors",
}).addTo(map);

let markers = JSON.parse(localStorage.getItem("markers") || "[]");
let routingControl = null;
let userLocation = null;

// ‡πÄ‡∏û‡∏¥‡πà‡∏° marker ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏ô‡∏≥‡∏ó‡∏≤‡∏á
function addMarker(lat,lng){
  const marker = L.marker([lat,lng]).addTo(map);
  marker.bindPopup(`<b>Marker</b><br><button onclick="navigateTo(${lat},${lng})">‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà</button>`);
  markers.push([lat,lng]);
  localStorage.setItem("markers",JSON.stringify(markers));
}

markers.forEach((m)=>addMarker(m[0],m[1]));

// ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏° marker
map.on("click",(e)=>{
  const {lat,lng}=e.latlng;
  if(universityBounds.contains([lat,lng])) addMarker(lat,lng);
  else alert("‚ùå ‡∏≠‡∏¢‡∏π‡πà‡∏ô‡∏≠‡∏Å‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢!");
});

// ‡∏´‡∏≤‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
function getLocation(){
  if(navigator.geolocation){
    navigator.geolocation.getCurrentPosition((pos)=>{
      const lat=pos.coords.latitude;
      const lng=pos.coords.longitude;
      if(!universityBounds.contains([lat,lng])) {alert("‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà‡∏ô‡∏≠‡∏Å‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢!");return;}
      userLocation=[lat,lng];
      L.marker(userLocation,{title:"‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô"}).addTo(map).bindPopup("üìç ‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà").openPopup();
      map.setView(userLocation,17);
    });
  } else alert("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏∏‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÑ‡∏î‡πâ");
}

// ‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á marker + ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤
function navigateTo(lat,lng){
  if(!userLocation){alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° üìç ‡∏´‡∏≤‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô");return;}
  if(routingControl) map.removeControl(routingControl);
  routingControl=L.Routing.control({
    waypoints:[L.latLng(userLocation[0],userLocation[1]),L.latLng(lat,lng)],
    routeWhileDragging:false,
    show:true,
    lineOptions:{styles:[{color:'blue',opacity:0.6,weight:5}]},
    router: L.Routing.osrmv1({serviceUrl:'https://router.project-osrm.org/route/v1'})
  }).addTo(map);
}

// ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å / ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡∏°‡∏∏‡∏î
function exportMarkers(){
  const data=JSON.stringify(markers);
  navigator.clipboard.writeText(data);
  alert("‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏´‡∏°‡∏∏‡∏î‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏Ñ‡∏•‡∏¥‡∏õ‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏•‡πâ‡∏ß ‚úÖ");
}
function importMarkers(){
  const data=prompt("‡∏ß‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏°‡∏∏‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤:");
  if(!data) return;
  try{
    const newMarkers=JSON.parse(data);
    newMarkers.forEach((m)=>{if(universityBounds.contains(m)) addMarker(m[0],m[1]);});
    alert("‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡∏°‡∏∏‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‚úÖ");
  } catch{alert("‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‚ùå");}
}
